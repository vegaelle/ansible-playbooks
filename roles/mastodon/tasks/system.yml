---
- name: Setup system
  include_role:
    name: app_ubuntu
    tasks_from: system

- name: Setup timezone
  command: "timedatectl set-timezone Europe/Paris"

- name: Set up web directory
  file:
    path: /srv/public
    owner: www-data
    group: www-data
    mode: 0755

- name: Change www-data home directory
  user:
    name: www-data
    home: /srv
    system: yes

- name: Add universe repository
  apt_repository:
    repo: deb http://archive.ubuntu.com/ubuntu focal universe
    state: absent

- name: Shamelessly install python2 for nodejs installation
  apt:
    name: python2
    update_cache: yes

- name: Load vars from Mastodon role
  include_vars:
    file: mastodon-ansible/bare/vars/common.yml

- name: Load debian vars from Mastodon role
  include_vars:
    file: mastodon-ansible/bare/vars/debian_vars.yml

- name: Override vars
  set_fact:
    disable_letsencrypt: "true"
    disable_nginx: "true"
    disable_ufw: "true"
    mastodon_repo: "https://github.com/glitch-soc/mastodon"

    # Mastodon setup
    mastodon_host: "{{ inventory_hostname }}"
    mastodon_db_password: "{{ db_pass }}"
    local_domain: "{{ inventory_hostname }}"
    mastodon_home: "/srv/public/mastodon/"
    mastodon_user: "mastodon"
    local_https: false
    use_http: true
    # web_domain: mastodon.example.com
    # alternate_domains: example1.com,example2.com
    # single_user_mode: true
    default_locale: fr
    # paperclip_root_path: /var/lib/mastodon/public-system
    # paperclip_root_url: /system
    # prepared_statements: false

    # Redis
    redis_host: redis
    redis_port: 6379
    redis_pass: "{{ redis_pass }}"

    # Postgres
    db_host: db
    db_user: mastodon
    db_name: mastodon
    db_port: 5432

    # Email
    # email_domain_blacklist: example1.com|example2.de|etc
    # email_domain_whitelist: example1.com|example2.de|etc
    smtp_server: localhost
    smtp_port: 587
    smtp_login: ""
    smtp_password: ""
    smtp_from_address: "system@{{ inventory_hostname }}"
    # smtp_domain:
    # smtp_delivery_method: smtp
    # smtp_auth_method: plain
    # smtp_ca_file: /etc/ssl/certs/ca-certificates.crt
    # smtp_openssl_verify_mode: peer
    # smtp_enable_starttls_auto: true
    # smtp_tls: true

    # CDN
    # cdn_host: https://assets.example.com
    # s3_cloudfront_host:

    # S3
    s3_enabled: false
    # s3_bucket:
    # aws_access_key_id:
    # aws_secret_access_key:
    # s3_region:
    # s3_protocol: https
    # s3_hostname: 192.168.1.123:9000
    # s3_endpoint:
    # s3_signature_version:

    swift_enabled: false
    # swift_username:
    # swift_tenant:
    # swift_password:
    # swift_auth_url:
    # swift_container:
    # swift_object_url:
    # swift_region:
    # swift_domain_name:
    # swift_cache_ttl:

    # Streaming API
    # streaming_api_base_url:
    # streaming_cluster_num: 1

    max_toot_chars: 5000
    web_concurrency: 2

# - name: Create mastodon public dir
#   file:
#     path: /home/mastodon/public
#     state: directory
#     owner: mastodon
#     group: mastodon

# - name: Create public bind-mount
#   mount:
#     path: /srv/public/public
#     src: /home/mastodon/live/public
#     opts: bind
#     state: mounted
#     fstype: none


- name: Apply postgres role
  include_role:
    name: mastodon-ansible/bare/roles/postgres

- name: Apply redis role
  include_role:
    name: mastodon-ansible/bare/roles/redis

- name: Apply mastodon-web role
  include_role:
    name: mastodon-ansible/bare/roles/web
...
