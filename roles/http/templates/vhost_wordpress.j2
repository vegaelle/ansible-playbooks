limit_conn_zone $binary_remote_addr zone={{ item }}:20m;

upstream {{ item }}-upstream {
    server 10.0.{{ hostvars[item]['vlan'] }}.{{ hostvars[item]['lxc_host'] }}:8000;
}

server {
    listen 80;
    listen [::]:80;
    server_name  {{ item }} www.{{ item }};

    include letsencrypt.conf;

    if ($uri !~ '^/.well-known/acme-challenge') {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name {{ item }} www.{{ item }};

    ssl_certificate    /etc/ssl/letsencrypt/{{ item }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;

    client_max_body_size 13m;

    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    root /var/www/vhosts/{{ item }};
    index index.php index.htm index.html;

    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;
    limit_conn {{ item }} 100;

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        root /srv/public;
        fastcgi_intercept_errors on;
        include           fastcgi.conf;
        fastcgi_pass      {{ item }}-upstream;
        fastcgi_index     index.php;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }

}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name autoconfig.{{ item }} autodiscover.{{ item }};
    add_header          Content-Security-Policy "script-src 'self' 'unsafe-inline'; object-src 'self'";

    ssl_certificate    /etc/ssl/letsencrypt/autoconfig.{{ item }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;


    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    root /var/www/vhosts/{{ item }};
    index index.htm index.html;

    location / {
        proxy_pass https://miab-upstream/;
    }
}
