limit_conn_zone $binary_remote_addr zone=funkwhale:20m;

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream {{ item }}-upstream {
    server 10.0.{{ hostvars[item]['vlan'] }}.{{ hostvars[item]['lxc_host'] }}:8000;
}

server {
    listen 80;
    listen [::]:80;
    server_name  {{ item }} www.{{ item }};

    include letsencrypt.conf;

    if ($uri !~ '^/.well-known/acme-challenge') {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ item }} www.{{ item }};

    ssl_certificate    /etc/ssl/letsencrypt/{{ item }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;


    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    keepalive_timeout    70;
    sendfile             on;
    client_max_body_size 16m;
    large_client_header_buffers 4 8k;


    # root /var/www/vhosts/{{ item }}/public;

    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; object-src 'none'; media-src 'self' data:; worker-src 'self'";

    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;

    gzip_types
        application/javascript
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;


    limit_conn funkwhale 100;

    location / {
        # global proxy conf
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;

        # websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # this is needed if you have file import via upload enabled
        client_max_body_size 200M;
        proxy_pass   http://{{ item }}-upstream/;
    }

    location /front/ {
        alias /var/www/vhosts/{{ item }}/front/dist/;
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        add_header Service-Worker-Allowed "/";
    }

    location /federation/ {
        # global proxy conf
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;

        # websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass   http://{{ item }}-upstream/federation/;
    }

    # You can comment this if you do not plan to use the Subsonic API
    location /rest/ {
        # global proxy conf
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;

        # websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass   http://{{ item }}-upstream/api/subsonic/rest/;
    }

    location /.well-known/ {
        # global proxy conf
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;

        # websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass   http://{{ item }}-upstream/.well-known/;
    }

    location /static/ {
        alias /var/www/vhosts/{{ item }}/static/;
    }

    location /staticfiles/ {
        alias /var/www/vhosts/{{ item }}/static/;
    }

    location /media/ {
        alias /var/www/vhosts/{{ item }}/media/;
    }

    location /_protected/media {
        # this is an internal location that is used to serve
        # audio files once correct permission / authentication
        # has been checked on API side
        internal;
        alias   /var/www/vhosts/{{ item }}/media/;
    }

}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name autoconfig.{{ item }} autodiscover.{{ item }};
    add_header          Content-Security-Policy "script-src 'self' 'unsafe-inline'; object-src 'self'";

    ssl_certificate    /etc/ssl/letsencrypt/autoconfig.{{ item }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;


    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    root /var/www/vhosts/{{ item }};
    index index.htm index.html;

    location / {
        proxy_pass https://miab-upstream/;
    }
}
