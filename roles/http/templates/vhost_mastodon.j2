limit_conn_zone $binary_remote_addr zone=masto:20m;

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream {{ item }}-upstream {
    server 10.0.{{ hostvars[item]['vlan'] }}.{{ hostvars[item]['lxc_host'] }}:3000;
}

upstream {{ item }}-upstream-streaming {
    server 10.0.{{ hostvars[item]['vlan'] }}.{{ hostvars[item]['lxc_host'] }}:4000;
}

server {
    listen 80;
    listen [::]:80;
    server_name  {{ item }} www.{{ item }};

    include letsencrypt.conf;

    if ($uri !~ '^/.well-known/acme-challenge') {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ item }} www.{{ item }};

    ssl_certificate    /etc/ssl/letsencrypt/{{ item }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;


    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    keepalive_timeout    70;
    sendfile             on;
    client_max_body_size 16m;
    large_client_header_buffers 4 8k;


    root /var/www/vhosts/{{ item }}/mastodon/live/public;
    index index.php index.htm index.html;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    limit_conn masto 100;

    location / {
      try_files $uri @proxy;
    }

    location ~ ^/(emoji|packs|system/accounts/avatars|system/media_attachments/files) {
      add_header Cache-Control "public, max-age=31536000, immutable";
      try_files $uri @proxy;
    }

    location /sw.js {
      add_header Cache-Control "public, max-age=0";
      try_files $uri @proxy;
    }

    location @proxy {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Proxy "";
      proxy_pass_header Server;

      proxy_pass http://{{ item }}-upstream;
      proxy_buffering off;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      tcp_nodelay on;
    }

    location /api/v1/streaming {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Proxy "";

      proxy_pass http://{{ item }}-upstream-streaming;
      proxy_buffering off;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      tcp_nodelay on;
    }

    error_page 500 501 502 503 504 /500.html;

}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name autoconfig.{{ item }} autodiscover.{{ item }};
    add_header          Content-Security-Policy "script-src 'self' 'unsafe-inline'; object-src 'self'";

    ssl_certificate    /etc/ssl/letsencrypt/autoconfig.{{ item }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;


    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    root /var/www/vhosts/{{ item }};
    index index.htm index.html;

    location / {
        proxy_pass https://miab-upstream/;
    }
}
