limit_conn_zone $binary_remote_addr zone=miab:20m;

upstream miab-upstream {
    server 10.0.{{ hostvars[item]['vlan'] }}.{{ hostvars[item]['lxc_host'] }}:443;
}

server {
    listen 80 default;
    listen [::]:80 default;
    server_name {{ item }} autoconfig.{{ item }} autodiscover.{{ item }};

    include letsencrypt.conf;

    if ($uri !~ '^/.well-known/acme-challenge') {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl default;
    listen [::]:443 ssl default;
    server_name {{ item }} autoconfig.{{ item }} autodiscover.{{ item }};
    add_header          Content-Security-Policy "default-src 'self' 'unsafe-eval' 'unsafe-inline' data:; script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'";

    ssl_certificate    /etc/ssl/letsencrypt/autoconfig.{{ item }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;

    client_max_body_size 20M;

    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    root /var/www/vhosts/{{ item }};
    index index.htm index.html;

    limit_conn miab 100;
    location / {
        proxy_set_header Host $host;
        proxy_pass https://miab-upstream/;
    }
}

{#
{% for host in groups['containers'] %}
{% if hostvars[host].role not in ('http', 'miab', 'firewall') %}
server {
    listen 80;
    listen [::]:80;
    server_name autoconfig.{{ host }} autodiscover.{{ host }};

    include letsencrypt.conf;

    if ($uri !~ '^/.well-known/acme-challenge') {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name autoconfig.{{ host }} autodiscover.{{ host }};
    add_header          Content-Security-Policy "script-src 'self' 'unsafe-inline'; object-src 'self'";

    ssl_certificate    /etc/ssl/letsencrypt/autoconfig.{{ host }}.pem;
    ssl_certificate_key    /etc/ssl/letsencrypt/ssl_private_key.pem;


    access_log /var/log/nginx/{{ item }}_access_log main;
    error_log /var/log/nginx/{{ item }}_error_log info;

    root /var/www/vhosts/{{ item }};
    index index.htm index.html;

    location / {
        proxy_pass https://miab-upstream/;
    }
}
{% endif %}
{% endfor %}
#}
