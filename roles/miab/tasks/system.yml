---
- name: Set Mailinabox env vars
  set_fact:
    miab_env:
      # DISABLE_FIREWALL: 1
      NONINTERACTIVE: 1
      PRIMARY_HOSTNAME: "{{ inventory_hostname }}"
      EMAIL_ADDR: "me@{{ inventory_hostname }}"
      EMAIL_PW: "{{ miab_pw }}"
      # EMAIL_ADDR: "me@{{ inventory_hostname }}"
      LC_ALL: en_US.UTF-8
      LC_CTYPE: en_US.UTF-8
      LANGUAGE: en_US.UTF-8

- name: Ensure that password authentication is disabled
  replace:
    path: /etc/ssh/sshd_config
    regexp: "^#(PasswordAuthentication) yes$"
    replace: "\\1 no"

- name: update system
  apt:
    upgrade: dist
    update_cache: yes

- name: Install curl
  apt:
    name: curl

- name: Reset changes to Mailinabox
  command: "git checkout management/ssl_certificates.py"
  args:
    chdir: "/root/mailinabox"
  ignore_errors: yes

- name: Ensure SSHD dir exists
  file:
    path: /run/sshd
    state: directory

- name: Install Mailinabox
  shell: "curl -s https://mailinabox.email/setup.sh | bash"
  environment: "{{ miab_env }}"

# - name: Copy patched ssl_certificates.py
#   copy:
#     src: files/ssl_certificates.py
#     dest: /root/mailinabox/management/ssl_certificates.py
#     remote_src: no

- name: Create public dir
  file:
    path: /home/user-data/ssl
    state: directory
    recurse: yes

- name: Print info messages
  debug:
    msg: "Mailinabox is installed. You can use the admin account me@{{ inventory_hostname }}."

- name: Create challenge dir
  file:
    path: "/home/user-data/ssl/lets_encrypt/webroot"
    state: directory

# insecure in case we hit the Lets Encrypt rate limiting
- name: Setup DNS, mail and certs for containers
  command: >
      curl --insecure -X POST --user "me@{{ inventory_hostname }}:{{ miab_pw }}"
      -d "email=system@{{ item }}"
      -d "password={{ mail_account_passphrase }}"
      "https://localhost/admin/mail/users/add"
  # ignore_errors: true
  loop: "{{ groups['containers'] }}"

- name: Setup additional DNS, mail and certs
  include_tasks: tasks/additional_dns.yml
  loop: "{{ groups['containers'] }}"
  when: hostvars[item].extra_domains is defined

- name: Change IPv6 address for containers
  command: >
      curl --insecure -X POST --user "me@{{ inventory_hostname }}:{{ miab_pw }}"
      -d "{{ firewall_public_ip6[:17] }}{{ hostvars[item].ctid | hex }}:7665:6761:6e62:7477"
      "https://localhost/admin/dns/custom/{{ item }}/aaaa"
  loop: "{{ groups['containers'] }}"


- name: Generate new SSL certificates
  command: "/root/mailinabox/management/ssl_certificates.py"

...
