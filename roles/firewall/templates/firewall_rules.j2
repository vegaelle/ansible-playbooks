# generated by ansible
*filter
:INPUT DROP [0:0]
[0:0] -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
[0:0] -A INPUT -p icmp -j ACCEPT
[0:0] -A INPUT -p tcp --dport 22 -j ACCEPT
[0:0] -A INPUT -p tcp --dport 9100 -s {{ reverse_proxy_ip }} -j ACCEPT

COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:INPUT DROP [0:0]
[0:0] -A INPUT -p icmp -j ACCEPT
[0:0] -A INPUT -p tcp --dport 22 -j ACCEPT
{% for container in groups['containers'] %}
{% if hostvars[container].role in roles_vars  and 'metrics' in roles_vars[hostvars[container].role] %}
{% for service_name, service_port in roles_vars[hostvars[container].role].metrics.items() %}
# opening port {{ service_port }} for service {{ service_name }} at {{ container }}
[0:0] -A INPUT -p tcp --dport {{ service_port }} -s {{ reverse_proxy_ip }} -j ACCEPT
{% endfor %}
{% endif %}
{% endfor %}
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# [0:0] -A POSTROUTING -s 10.0.0.1/32 -o eth1 -j MASQUERADE
[0:0] -A POSTROUTING -s 10.0.0.0/16 -o eth0 -j MASQUERADE
{% for container in groups['containers'] %}
{% if hostvars[container].role in roles_vars and 'allow_ssh' in roles_vars[hostvars[container].role] and roles_vars[hostvars[container].role].allow_ssh %}
[0:0] -A PREROUTING -d {{ firewall_public_ip }} -p tcp --dport 22{{ hostvars[container].ctid }} -j DNAT --to-destination 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }}:22
{% endif %}
{% if hostvars[container].role in roles_vars %}
# ports redirections for {{ container }}
{% for port in roles_vars[hostvars[container].role].redirected_ports %}
# redirection for {{ port.value }} ({{ port.proto }})
[0:0] -A PREROUTING -d {{ firewall_public_ip }} -p {{ port.proto }} --dport {{ port.value }} -j DNAT --to-destination 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }}
[0:0] -A POSTROUTING -s 10.0.0.0/16 -d 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }} -p {{ port.proto }} --dport {{ port.value }} -j MASQUERADE
[0:0] -A OUTPUT -d {{ firewall_public_ip }} -p {{ port.proto }} --dport {{ port.value }} -j DNAT --to-destination 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }}
{% endfor %}

{% if hostvars[container].role == 'minecraft' %}
{% for world in hostvars[container].worlds %}
# redirection for {{ world.port }} (minecraft server {{ world.world_name }})
[0:0] -A PREROUTING -d {{ firewall_public_ip }} -p udp --dport {{ world.port }} -j DNAT --to-destination 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }}
[0:0] -A PREROUTING -d {{ firewall_public_ip }} -p tcp --dport {{ world.port }} -j DNAT --to-destination 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }}
[0:0] -A POSTROUTING -s 10.0.0.0/16 -d 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }} -p udp --dport {{ world.port }} -j MASQUERADE
[0:0] -A POSTROUTING -s 10.0.0.0/16 -d 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }} -p tcp --dport {{ world.port }} -j MASQUERADE
[0:0] -A OUTPUT -d {{ firewall_public_ip }} -p udp --dport {{ world.port }} -j DNAT --to-destination 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }}
[0:0] -A OUTPUT -d {{ firewall_public_ip }} -p tcp --dport {{ world.port }} -j DNAT --to-destination 10.0.{{ hostvars[container].vlan }}.{{ hostvars[container].ctid }}

{% endfor %}
{% endif %}

{% endif %}
{% endfor %}
COMMIT
